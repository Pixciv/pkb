name: CI - Build Kivy APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Get Date
      id: get-date
      run: |
        echo "date=$(date -u '+%Y%m%d')" >> $GITHUB_ENV

    # Cache Buildozer directories
    - name: Cache Buildozer global directory
      uses: actions/cache@v3
      with:
        path: .buildozer_global
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}

    - name: Cache Buildozer project directory
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: ${{ runner.os }}-${{ env.date }}-${{ hashFiles('buildozer.spec') }}

    # Install system dependencies
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential git ffmpeg libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
          libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev libunwind-dev zlib1g-dev \
          libsqlite3-dev sqlite3 bzip2 libbz2-dev zlib1g-dev openssl libgdbm-dev libgdbm-compat-dev \
          liblzma-dev libreadline-dev uuid-dev libgstreamer1.0 gstreamer1.0-plugins-base gstreamer1.0-plugins-good \
          zip unzip autoconf libtool pkg-config libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev automake \
          openjdk-17-jdk wget curl

    # Setup Java
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17

    # Setup Python
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.10

    # Install Python dependencies
    - name: Install Python packages
      run: |
        python -m pip install --upgrade pip
        python -m pip install cython==0.29.36 buildozer

    # Setup Android SDK and accept licenses
    - name: Setup Android SDK and Build Tools
      run: |
        mkdir -p $HOME/android-sdk/cmdline-tools
        cd $HOME/android-sdk/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip
        mv cmdline-tools latest
        rm cmdline-tools.zip
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
        yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses
        sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-30" "build-tools;33.0.2"

    # Initialize buildozer.spec if missing
    - name: Initialize buildozer.spec if missing
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
          sed -i 's/^title = .*/title = MyApp/' buildozer.spec
          sed -i 's/^package.name = .*/package.name = com.example.myapp/' buildozer.spec
          sed -i 's/^package.domain = .*/package.domain = org.example/' buildozer.spec
          sed -i 's/^version = .*/version = 0.1/' buildozer.spec
          sed -i 's/^source.include_exts = .*/source.include_exts = py,png,jpg,kv,atlas/' buildozer.spec
          sed -i 's/^android.build_tools = .*/android.build_tools = 33.0.2/' buildozer.spec
          sed -i 's/^android.sdk = .*/android.sdk = 30/' buildozer.spec
          sed -i 's/^android.ndk = .*/android.ndk = 25b/' buildozer.spec
        fi

    # Build APK
    - name: Build with Buildozer
      run: |
        yes | buildozer android debug

    # Upload APK
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: package
        path: bin/*.apk
